{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2025-46569",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "github.com/open-policy-agent/opa/server: github.com/open-policy-agent/opa/v1/server: OPA server Data API HTTP path injection of Rego"
              },
              "fullDescription": {
                "text": "Open Policy Agent (OPA) is an open source, general-purpose policy engine. Prior to version 1.4.0, when run as a server, OPA exposes an HTTP Data API for reading and writing documents. Requesting a virtual document through the Data API entails policy evaluation, where a Rego query containing a single data document reference is constructed from the requested path. This query is then used for policy evaluation. A HTTP request path can be crafted in a way that injects Rego code into the constructed query. The evaluation result cannot be made to return any other data than what is generated by the requested path, but this path can be misdirected, and the injected Rego code can be crafted to make the query succeed or fail; opening up for oracle attacks or, given the right circumstances, erroneous policy decision results. Furthermore, the injected code can be crafted to be computationally expensive, resulting in a Denial Of Service (DoS) attack. This issue has been patched in version 1.4.0. A workaround involves having network access to OPA’s RESTful APIs being limited to `localhost` and/or trusted networks, unless necessary for production reasons."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-46569",
              "help": {
                "text": "Vulnerability CVE-2025-46569\nSeverity: HIGH\nPackage: github.com/open-policy-agent/opa\nFixed Version: 1.4.0\nLink: [CVE-2025-46569](https://avd.aquasec.com/nvd/cve-2025-46569)\nOpen Policy Agent (OPA) is an open source, general-purpose policy engine. Prior to version 1.4.0, when run as a server, OPA exposes an HTTP Data API for reading and writing documents. Requesting a virtual document through the Data API entails policy evaluation, where a Rego query containing a single data document reference is constructed from the requested path. This query is then used for policy evaluation. A HTTP request path can be crafted in a way that injects Rego code into the constructed query. The evaluation result cannot be made to return any other data than what is generated by the requested path, but this path can be misdirected, and the injected Rego code can be crafted to make the query succeed or fail; opening up for oracle attacks or, given the right circumstances, erroneous policy decision results. Furthermore, the injected code can be crafted to be computationally expensive, resulting in a Denial Of Service (DoS) attack. This issue has been patched in version 1.4.0. A workaround involves having network access to OPA’s RESTful APIs being limited to `localhost` and/or trusted networks, unless necessary for production reasons.",
                "markdown": "**Vulnerability CVE-2025-46569**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/open-policy-agent/opa|1.4.0|[CVE-2025-46569](https://avd.aquasec.com/nvd/cve-2025-46569)|\n\nOpen Policy Agent (OPA) is an open source, general-purpose policy engine. Prior to version 1.4.0, when run as a server, OPA exposes an HTTP Data API for reading and writing documents. Requesting a virtual document through the Data API entails policy evaluation, where a Rego query containing a single data document reference is constructed from the requested path. This query is then used for policy evaluation. A HTTP request path can be crafted in a way that injects Rego code into the constructed query. The evaluation result cannot be made to return any other data than what is generated by the requested path, but this path can be misdirected, and the injected Rego code can be crafted to make the query succeed or fail; opening up for oracle attacks or, given the right circumstances, erroneous policy decision results. Furthermore, the injected code can be crafted to be computationally expensive, resulting in a Denial Of Service (DoS) attack. This issue has been patched in version 1.4.0. A workaround involves having network access to OPA’s RESTful APIs being limited to `localhost` and/or trusted networks, unless necessary for production reasons."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-22872",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang.org/x/net/html: Incorrect Neutralization of Input During Web Page Generation in x/net in golang.org/x/net"
              },
              "fullDescription": {
                "text": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-22872",
              "help": {
                "text": "Vulnerability CVE-2025-22872\nSeverity: MEDIUM\nPackage: golang.org/x/net\nFixed Version: 0.38.0\nLink: [CVE-2025-22872](https://avd.aquasec.com/nvd/cve-2025-22872)\nThe tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts).",
                "markdown": "**Vulnerability CVE-2025-22872**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|golang.org/x/net|0.38.0|[CVE-2025-22872](https://avd.aquasec.com/nvd/cve-2025-22872)|\n\nThe tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2025-22874",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "crypto/x509: Usage of ExtKeyUsageAny disables policy validation in crypto/x509"
              },
              "fullDescription": {
                "text": "Calling Verify with a VerifyOptions.KeyUsages that contains ExtKeyUsageAny unintentionally disabledpolicy validation. This only affected certificate chains which contain policy graphs, which are rather uncommon."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-22874",
              "help": {
                "text": "Vulnerability CVE-2025-22874\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.24.4\nLink: [CVE-2025-22874](https://avd.aquasec.com/nvd/cve-2025-22874)\nCalling Verify with a VerifyOptions.KeyUsages that contains ExtKeyUsageAny unintentionally disabledpolicy validation. This only affected certificate chains which contain policy graphs, which are rather uncommon.",
                "markdown": "**Vulnerability CVE-2025-22874**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.24.4|[CVE-2025-22874](https://avd.aquasec.com/nvd/cve-2025-22874)|\n\nCalling Verify with a VerifyOptions.KeyUsages that contains ExtKeyUsageAny unintentionally disabledpolicy validation. This only affected certificate chains which contain policy graphs, which are rather uncommon."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-0913",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Inconsistent handling of O_CREATE|O_EXCL on Unix and Windows in os in syscall"
              },
              "fullDescription": {
                "text": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-0913",
              "help": {
                "text": "Vulnerability CVE-2025-0913\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.23.10, 1.24.4\nLink: [CVE-2025-0913](https://avd.aquasec.com/nvd/cve-2025-0913)\nos.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
                "markdown": "**Vulnerability CVE-2025-0913**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.23.10, 1.24.4|[CVE-2025-0913](https://avd.aquasec.com/nvd/cve-2025-0913)|\n\nos.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2025-22871",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "net/http: Request smuggling due to acceptance of invalid chunked data in net/http"
              },
              "fullDescription": {
                "text": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-22871",
              "help": {
                "text": "Vulnerability CVE-2025-22871\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.23.8, 1.24.2\nLink: [CVE-2025-22871](https://avd.aquasec.com/nvd/cve-2025-22871)\nThe net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
                "markdown": "**Vulnerability CVE-2025-22871**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.23.8, 1.24.2|[CVE-2025-22871](https://avd.aquasec.com/nvd/cve-2025-22871)|\n\nThe net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2025-4673",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "net/http: Sensitive headers not cleared on cross-origin redirect in net/http"
              },
              "fullDescription": {
                "text": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-4673",
              "help": {
                "text": "Vulnerability CVE-2025-4673\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.23.10, 1.24.4\nLink: [CVE-2025-4673](https://avd.aquasec.com/nvd/cve-2025-4673)\nProxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
                "markdown": "**Vulnerability CVE-2025-4673**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.23.10, 1.24.4|[CVE-2025-4673](https://avd.aquasec.com/nvd/cve-2025-4673)|\n\nProxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.64.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2025-46569",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: github.com/open-policy-agent/opa\nInstalled Version: v1.3.0\nVulnerability CVE-2025-46569\nSeverity: HIGH\nFixed Version: 1.4.0\nLink: [CVE-2025-46569](https://avd.aquasec.com/nvd/cve-2025-46569)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opa",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opa: github.com/open-policy-agent/opa@v1.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-22872",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.37.0\nVulnerability CVE-2025-22872\nSeverity: MEDIUM\nFixed Version: 0.38.0\nLink: [CVE-2025-22872](https://avd.aquasec.com/nvd/cve-2025-22872)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opa",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opa: golang.org/x/net@v0.37.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-22874",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: v1.24.0\nVulnerability CVE-2025-22874\nSeverity: HIGH\nFixed Version: 1.24.4\nLink: [CVE-2025-22874](https://avd.aquasec.com/nvd/cve-2025-22874)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opa",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opa: stdlib@v1.24.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-0913",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: v1.24.0\nVulnerability CVE-2025-0913\nSeverity: MEDIUM\nFixed Version: 1.23.10, 1.24.4\nLink: [CVE-2025-0913](https://avd.aquasec.com/nvd/cve-2025-0913)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opa",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opa: stdlib@v1.24.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-22871",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: v1.24.0\nVulnerability CVE-2025-22871\nSeverity: MEDIUM\nFixed Version: 1.23.8, 1.24.2\nLink: [CVE-2025-22871](https://avd.aquasec.com/nvd/cve-2025-22871)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opa",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opa: stdlib@v1.24.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4673",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: v1.24.0\nVulnerability CVE-2025-4673\nSeverity: MEDIUM\nFixed Version: 1.23.10, 1.24.4\nLink: [CVE-2025-4673](https://avd.aquasec.com/nvd/cve-2025-4673)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "opa",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "opa: stdlib@v1.24.0"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageID": "sha256:7c76e30497080a3bc3b43e503de9f21ca159448da383a45a4bd54bf909c59930",
        "imageName": "docker.io/openpolicyagent/opa:1.3.0-static",
        "repoDigests": [
          "openpolicyagent/opa@sha256:44f0f4b1c09260eaf5e24fc3931fe10f80cffd13054ef3ef62cef775d5cbd272"
        ],
        "repoTags": [
          "openpolicyagent/opa:1.3.0-static"
        ],
        "imageCreatedDate": "2025-03-27T14:39:17.02439485Z",
        "imageAgeDays": 103,
        "imageAgeSeconds": 8975518,
        "imageAgeText": "103 days",
        "imageAgeStatus": "moderate",
        "scanTimestamp": "2025-07-09T11:51:16Z",
        "ageMetadataVersion": "1.0",
        "helmCharts": [
          "zaakafhandelcomponent"
        ],
        "helmChartsCount": 1,
        "helmChartsEnhanced": true,
        "helmChartsEnhancementDate": "2025-07-09T11:51:16Z",
        "chartsMetadataVersion": "1.0",
        "epssScores": [
          {
            "cve": "CVE-2025-0913",
            "epss": 0.00013,
            "percentile": 0.01456
          },
          {
            "cve": "CVE-2025-22871",
            "epss": 0.00023,
            "percentile": 0.04421
          },
          {
            "cve": "CVE-2025-22872",
            "epss": 0.00033,
            "percentile": 0.07832
          },
          {
            "cve": "CVE-2025-22874",
            "epss": 0.00022,
            "percentile": 0.04078
          },
          {
            "cve": "CVE-2025-46569",
            "epss": 0.00018,
            "percentile": 0.02942
          },
          {
            "cve": "CVE-2025-4673",
            "epss": 0.0004,
            "percentile": 0.11285
          }
        ],
        "epssHighRiskCount": 0,
        "epssMediumRiskCount": 0,
        "epssLowRiskCount": 6,
        "epssVeryHighRiskCount": 0,
        "epssEnhanced": true,
        "epssEnhancementDate": "2025-07-09T11:51:17Z",
        "epssMetadataVersion": "1.0"
      }
    }
  ]
}
