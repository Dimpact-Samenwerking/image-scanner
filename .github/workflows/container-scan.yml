name: Container Security Scan

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 3 * * 2-6  ' # Daily Tuesday-Saturday at 3:00 AM UTC
env:
  REGISTRY: ghcr.io

jobs:
  install-dependencies:
    uses: ./.github/workflows/install-dependencies.yml

  scan:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive


      # --- Testing Step ---
      - name: Testing Step
        run: |
          set -v
          echo "üîç Testing"
          df -h
          pwd
          ls -la
          touch test.txt
          ls -la
          echo JIMBO | figlet

      # --- Prep step ---
      - name: Prep Step
        run: |
          mkdir -p .cache/trivy

      # --- Discovery Step ---
      - name: Discover container images (generate discovered.yaml)
        run: |
          set -v
          chmod +x scripts/dimpact-image-discovery.sh
          echo "üîç Discovering images for scan..."
          ./scripts/dimpact-image-discovery.sh --output-file --check-image-availability
          if [ ! -f discovered.yaml ]; then
            echo "‚ùå discovered.yaml not found! Discovery failed."
            exit 1
          fi
          echo "‚úÖ discovered.yaml generated."

      # --- SCAN Step ---
      - name: Run container image security scan
        run: |
          set -v
          chmod +x scripts/dimpact-image-scanner.sh
          echo "üöÄ Starting container image security scan..."
          # Use date-prefixed output dir
          SCAN_DATE=$(date +%y%m%d)
          OUTPUT_DIR="./${SCAN_DATE}-dimpact-scan-results"
          # Use max performance for CI
          ./scripts/dimpact-image-scanner.sh \
            --use-discovered \
            --output-dir "$OUTPUT_DIR" \
            --performance max
          echo "‚úÖ Scan complete. Results in $OUTPUT_DIR"

      # --- REPORT Step ---
      - name: Generate consolidated security report
        run: |
          set -v
          chmod +x scripts/dimpact-image-report.sh
          SCAN_DATE=$(date +%y%m%d)
          OUTPUT_DIR="./${SCAN_DATE}-dimpact-scan-results"
          if [ ! -d "$OUTPUT_DIR" ]; then
            echo "‚ùå Scan output dir $OUTPUT_DIR not found!"
            exit 1
          fi
          ./scripts/dimpact-image-report.sh --input-dir "$OUTPUT_DIR"

      # --- Git Commit Step ---
      - name: Commit scan results and reports
        run: |
          echo "üìù Committing scan results and reports..."
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          SCAN_DATE=$(date +%y%m%d)
          git add "./${SCAN_DATE}-dimpact-scan-results/"
          git add ./docs/data/
          
          COMMIT_MSG="üîí Add container scan results for ${SCAN_DATE}"
          git commit -m "${COMMIT_MSG}" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF}
          echo "‚úÖ Changes committed and pushed successfully!"

